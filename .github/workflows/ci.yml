name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  cpp-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}}/src/cpp

    - name: Build
      run: cmake --build ${{github.workspace}}/build

    - name: Run C++ tests
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

  python-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies
      run: poetry install

    - name: Run Python tests
      run: |
        export PYTHONPATH="${PYTHONPATH}:${PWD}/src/python:${PWD}/src"
        poetry run pytest tests/

    - name: Check code formatting
      run: |
        poetry run black --check .
        poetry run isort --check-only .
        poetry run flake8 .

    - name: Run pylint
      run: poetry run pylint src/python/

  docker:
    runs-on: ubuntu-latest
    needs: [cpp-build, python-build]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build ML Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/ml.Dockerfile
        push: false
        tags: order-flow-predictor-ml:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build C++ Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/cpp.Dockerfile
        push: false
        tags: order-flow-predictor-cpp:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  performance-test:
    runs-on: ubuntu-latest
    needs: [docker]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v3

    - name: Run performance tests
      run: |
        # Will be implemented once performance tests are added
        echo "Performance tests will run here"
